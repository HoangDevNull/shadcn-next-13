/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ./BoxWrapped.gltf --transform -S -i -t
*/

import { useGLTF } from '@react-three/drei';
import { useLoader } from '@react-three/fiber';
import React from 'react';
import type * as THREE from 'three';
import { type GLTF, RGBELoader } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh;
  };
  materials: {};
};

export default function BoxWrapped(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/BoxWrapped.glb') as GLTFResult;
  const texture = useLoader(
    RGBELoader,
    'https://dl.polyhaven.org/file/ph-assets/HDRIs/hdr/1k/aerodynamics_workshop_1k.hdr'
  );
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow position={[0, 0, 0]} scale={1.5} geometry={nodes.Plane.geometry}>
        <meshPhysicalMaterial envMap={texture} transmission={1} roughness={0.35} thickness={300} />
      </mesh>
    </group>
  );
}

useGLTF.preload('/models/BoxWrapped.glb');
