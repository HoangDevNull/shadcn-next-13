/* eslint-disable react/display-name */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ./public/skull.gltf --transform --t
*/

import { useGLTF } from '@react-three/drei';
import React, { forwardRef } from 'react';
import type * as THREE from 'three';
import type { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Skull: THREE.Mesh;
  };
  materials: {
    Default: THREE.MeshStandardMaterial;
  };
};

export const Skull = forwardRef<any, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/skull-transformed.glb') as GLTFResult;

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.Skull.geometry} material={materials.Default} />
    </group>
  );
});

useGLTF.preload('/skull-transformed.glb');
